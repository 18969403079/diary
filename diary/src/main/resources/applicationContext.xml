<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd"
	default-lazy-init="true">



	<!-- 自动扫描该包,使注解生效 -->
	<context:component-scan base-package="com.diary.zhuxianjun" />

	<!-- 配置读取外部配置文件 -->
	<bean class="com.diary.zhuxianjun.util.MyConvertPropertyConfig">
        <property name="locations">  
            <list>
                <value>classpath:diary.properties</value>  
                <value>classpath:jdbc.properties</value>
            </list>
        </property>  
        <property name="ignoreUnresolvablePlaceholders" value="true"/> 
    </bean>

	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 注入数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${db.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${db.maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${db.maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${db.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${db.maxWait}"></property>
	</bean>

	<!-- 此行语句使得resource autowired 等四个注解可以使用 -->
	<context:annotation-config />

	<!-- freeMaker配置 -->
	<bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths" value="${template.loader_path}" />
		<property name="freemarkerSettings">
			<props>
				<prop key="defaultEncoding">${template.encoding}</prop>
				<prop key="url_escaping_charset">${url_escaping_charset}</prop>
				<prop key="locale">${locale}</prop>
				<prop key="template_update_delay">${template.update_delay}</prop>
				<prop key="tag_syntax">auto_detect</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="number_format">${template.number_format}</prop>
				<prop key="boolean_format">${template.boolean_format}</prop>
				<prop key="datetime_format">${template.datetime_format}</prop>
				<prop key="date_format">${template.date_format}</prop>
				<prop key="time_format">${template.time_format}</prop>
				<prop key="object_wrapper">freemarker.ext.beans.BeansWrapper</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="systemName" value="${system.name}" />
				<entry key="systemVersion" value="${system.version}" />
				<entry key="systemCssVersion" value="${system.css_version}" />
				<entry key="systemDescription" value="${system.description}" />
				<entry key="base" value="#{servletContext.contextPath}" />
			</map>
		</property>
	</bean>
	<!-- 视图配置 在list中按照配置的先后顺序 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="text/html" />
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xls" value="application/vnd.ms-excel" />
				<entry key="xlsx"
					value="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
				<entry key="pdf" value="application/pdf" />
			</map>
		</property>
		<property name="favorParameter" value="false" />
		<property name="viewResolvers">
			<list>
				<!-- 配置freeMarker视图解析器 -->
				<bean
					class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
					<property name="cache" value="true" />
					<property name="prefix" value="" /><!-- 上面已经配了，这里就不用配啦 -->
					<property name="suffix" value=".ftl" />
					<property name="contentType" value="text/html;charset=UTF-8" />
					<property name="viewClass"
						value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
					<property name="allowSessionOverride" value="true" />
					<property name="allowRequestOverride" value="true" />
					<property name="exposeSpringMacroHelpers" value="false" />
					<property name="exposeRequestAttributes" value="true" />
					<property name="exposeSessionAttributes" value="true" />
					<property name="requestContextAttribute" value="request" />
				</bean>
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" />
					<!-- 此处配置返回页面的基础路径与后缀 -->
					<property name="prefix" value="/WEB-INF/template/" />
					<property name="suffix" value=".ftl" />
				</bean>
			</list>
		</property>
	</bean>
	<!--freeMaker配置 -->

	<!-- 创建SqlSessionFactory，同时指定数据源与mybatis配置文件的位置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="mapperLocations" value="classpath*:mapper/*.xml" />
	</bean>

	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.diary.zhuxianjun.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 实例化jdbcTemplate,同时注入数据源 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 事务扫描开始(开启@Tranctional) -->
	<tx:annotation-driven transaction-manager="txManager" />
</beans>